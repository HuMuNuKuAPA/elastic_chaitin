input {
tcp {
    port => 26519
    type => "ChaiTin_OA"
   # codec => json
    }
tcp {
    port => 26520
    type => "ChaiTin_JQ"
   # codec => json
    }
tcp {
    port => 26521
    type => "ChaiTin_KJW"
   # codec => json
    }
tcp {
    port => 26522
    type => "ChaiTin_KJW2"
   # codec => json
    }
}

filter {
  grok {
    match => { "message" => "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:host} %{DATA:garbage}: {%{GREEDYDATA:syslog_message}}" }
    overwrite => [ "message" ]
  }


  kv {
    source => "syslog_message"
    field_split => ","
    value_split => ":"
    # exclude_keys => ["cookie", "user_agent","req_header_raw","resp_header_raw"]
    allow_empty_values => true
    whitespace => strict
    remove_char_key => "\\\""
  }
  
  date {
    match => [ "timestamp", "UNIX" ]
    target => "@timestamp"
    timezone => "Asia/Shanghai"
  }

  
  mutate {
    remove_field => ["syslog_message","garbage","message","event","req_header_raw","resp_header_raw"]
  }
}
output {
 # file {
   # path => "/tmp/chaitin.log"
    # codec => json_lines
 # }
  elasticsearch {
    hosts => ["https://192.168.26.1:9200"] # Replace with your Elasticsearch host
    user => "elastic"     # Replace with your Elasticsearch username
    password => "Q5IX34xaYlORZwNLuvdz" # Replace with your Elasticsearch password
    # index => "chaitin_waf_%{+YYYY.MM.dd}" # The index name in Elasticsearch
    ssl => true
    cacert => "/usr/share/logstash/config/ca_1706002569357.crt" # Path to your CA certificate, if needed
    index => "logs-chaitin_waf-attack"
    action => "create"
  }
}
